- hosts: k3s
  tags: deps
  tasks:
    - ansible.builtin.apt:
        update_cache: yes
        name: apt-transport-https
      become: true
    - ansible.builtin.get_url:
        url: https://baltocdn.com/helm/signing.asc
        dest: /usr/share/keyrings/helm.asc
      become: true
    - ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/usr/share/keyrings/helm.asc] https://baltocdn.com/helm/stable/debian/ all main
        state: present
        filename: helm-stable-debian
      become: true
    - ansible.builtin.apt:
        update_cache: yes
        name: helm
      become: true
    - pip:
        name: kubernetes

- hosts: zfs_storage
  tags: zfs
  vars:
    storage_classes:
      - name: zfs-snap
        snapshots: "true"
        filesystem: zfs
        default: "true"
        poolname: "{{data_zpool}}/openebs/snap/fs"
      - name: zfs-nosnap
        snapshots: "false"
        filesystem: zfs
        poolname: "{{data_zpool}}/openebs/nosnap/fs"
      - name: zvol-snap
        snapshots: "true"
        filesystem: ext4
        poolname: "{{data_zpool}}/openebs/snap/vol"
      - name: zvol-nosnap
        snapshots: "false"
        filesystem: ext4
        poolname: "{{data_zpool}}/openebs/nosnap/vol"
  tasks:
    - kubernetes.core.helm_repository:
        name: openebs-zfslocalpv
        repo_url: https://openebs.github.io/zfs-localpv
    - kubernetes.core.helm:
        name: zfs-localpv
        chart_ref: openebs-zfslocalpv/zfs-localpv
        release_namespace: openebs
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        create_namespace: true
    - community.general.zfs:
        name: "{{item.poolname}}"
        state: present
        extra_zfs_properties:
          "com.sun:auto-snapshot": "{{ item.snapshots }}"
      become: true
      loop: "{{storage_classes}}"
    - kubernetes.core.k8s:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        definition:
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: "{{item.name}}"
            annotations: 
              storageclass.kubernetes.io/is-default-class: "{{item.default | default('false')}}"
          parameters:
            recordsize: "{{'4k' if item.filesystem == 'zfs' else omit}}"
            volblocksize: "{{'4k' if item.filesystem != 'zfs' else omit}}"
            compression: "off"
            dedup: "off"
            fstype: "zfs"
            poolname: "{{item.poolname}}"
            "com.sun:auto-snapshot": "{{ item.snapshots }}"
          provisioner: zfs.csi.openebs.io
      loop: "{{storage_classes}}"
    # May need to remove the default class annotation from whatever the previous default was, if necessary